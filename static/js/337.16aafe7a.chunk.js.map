{"version":3,"file":"static/js/337.16aafe7a.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileStatusWithHooks.tsx","webpack://samurai-way/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileInfo/ProfileData.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/Posts/MyPosts.module.css?6739","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/AddPostForm/AddPostForm.tsx","components/Profile/MyPosts/Posts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/WithAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content__img\":\"ProfileInfo_content__img__WpS8O\",\"wrapper\":\"ProfileInfo_wrapper__hQM0R\"};","import React, {ChangeEvent, useEffect, useState,} from 'react';\r\nimport Input from \"antd/lib/input/Input\";\r\nimport {EditOutlined} from \"@ant-design/icons\";\r\n\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks: React.FC<ProfileStatusType> = ({status, updateStatus}) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    let [tempStatus, setTempStatus] = useState(status)\r\n    useEffect(() => {\r\n        setTempStatus(status)\r\n    }, [status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTempStatus(e.currentTarget.value)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        updateStatus(tempStatus)\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                editMode\r\n                    ? <div>\r\n                        <Input onChange={onStatusChange} value={tempStatus} onBlur={deactivateEditMode}\r\n                               autoFocus={true}></Input>\r\n\r\n                    </div>\r\n                    : <div style={{display:'flex', gap:'0 10px', fontWeight:'500',fontSize:'16px'}}>\r\n                        <span >My status:</span>\r\n                        <span onDoubleClick={activateEditMode}>{tempStatus || 'No status'}</span>\r\n                        <EditOutlined onClick={activateEditMode} />\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Profile_list__aUOCO\",\"item\":\"Profile_item__So0EX\",\"itemTitle\":\"Profile_itemTitle__IWF4O\",\"itemSubTitle\":\"Profile_itemSubTitle__sFufm\"};","import React from \"react\";\r\nimport {ContactsKey, ProfileType} from \"../../api/profileAPI\";\r\nimport {Button} from \"antd\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from 'components/Profile/Profile.module.css'\r\n\r\ntype ContactType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\nexport type ProfileDataType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    edit: () => void\r\n}\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile, isOwner, edit}) => {\r\n\r\n    return (\r\n        <div className={s.list}>\r\n\r\n            {isOwner && <div style={{textAlign:'right'}}><Button type={'primary'} size={\"small\"} onClick={edit}>Edit Profile</Button></div>}\r\n            <div className={s.item}>\r\n                <span className={s.itemTitle}>Full Name:</span>\r\n                <span\r\n                className={s.itemSubTitle}>{profile.fullName ? profile.fullName : 'fullName'}\r\n                </span>\r\n            </div>\r\n            <div className={s.item}>\r\n                <span className={s.itemTitle}>UserId:</span>\r\n                <span\r\n                    className={s.itemSubTitle}>{profile.userId ? profile.userId : 'userId'}\r\n                </span>\r\n            </div>\r\n            <div className={s.item}>\r\n\r\n                <span className={s.itemTitle}>About Me:</span>\r\n                <span\r\n                    className={s.itemSubTitle}>{profile.aboutMe ? profile.aboutMe : 'aboutMe'}\r\n                </span>\r\n            </div>\r\n            <div className={s.item}>\r\n                <span className={s.itemTitle}>Look for job:</span>\r\n                <span\r\n                    className={s.itemSubTitle}>{profile.lookingForAJob ? 'Yes' : 'No'}\r\n                </span>\r\n            </div>\r\n            <div className={s.item}>\r\n                <span className={s.itemTitle}>Job Description:</span>\r\n                <span\r\n                    className={s.itemSubTitle}>{profile.lookingForAJobDescription ? profile.lookingForAJobDescription : 'JobDescription'}\r\n                </span>\r\n\r\n            </div>\r\n            <div className={s.item}>\r\n                Contacts :\r\n                {\r\n                    Object.keys(profile.contacts).map((key) => {\r\n\r\n                        return <Contact key={key} contactTitle={key}\r\n                                        contactValue={profile?.contacts ? profile.contacts[key as ContactsKey] : ''}/>\r\n                    })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Contact: React.FC<ContactType> = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <span className={s.itemTitle}>{contactTitle}:</span>\r\n        <NavLink target={\"_blank\"} to={contactValue}>{contactValue}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default ProfileData","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport { MyInput, Textarea} from \"../../common/FormControls/FormsControls\";\r\nimport s from \"../../common/FormControls/FormsControls.module.css\";\r\nimport { ProfileType} from \"../../api/profileAPI\";\r\nimport {Button} from \"antd\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType| null\r\n}\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<ProfileType, PropsType> & PropsType> = ({handleSubmit, error, profile}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Button size={\"small\"} htmlType={'submit'} type={\"primary\"}>Save Profile</Button>\r\n            </div>\r\n            <div>\r\n                {error && <div className={s.formSummaryError}>{error}</div>}\r\n            </div>\r\n            <div>Full name:\r\n                <Field placeholder={'Full name'}\r\n                       name={'fullName'}\r\n                       component={MyInput}\r\n                       validate={[]}\r\n                />\r\n            </div>\r\n            <div>UserId:\r\n                {profile?.userId}\r\n            </div>\r\n            <div> About me:\r\n                <Field placeholder={'About me'}\r\n                       name={'aboutMe'}\r\n                       component={Textarea}\r\n                       validate={[]}\r\n                />\r\n            </div>\r\n            <div>Looking for a job:\r\n                <Field\r\n                    name={'lookingForAJob'}\r\n                    component={MyInput}\r\n                    validate={[]}\r\n                    type={'checkbox'}\r\n                />\r\n            </div>\r\n            <div>Job description:\r\n                <Field\r\n                    placeholder={'My professional skills'}\r\n                    name={'lookingForAJobDescription'}\r\n                    component={Textarea}\r\n                    validate={[]}\r\n                />\r\n            </div>\r\n            <div>\r\n                Contacts\r\n                {profile?\r\n                    Object.keys(profile.contacts).map((key) => {\r\n                        return <div key={key}>\r\n                            <b>{key}</b>\r\n                            <Field placeholder={key}\r\n                                   name={'contacts.' + key}\r\n                                   component={MyInput}\r\n                                   validate={[]}\r\n                            />\r\n                        </div>\r\n                    })\r\n                :<div></div>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default reduxForm<ProfileType, PropsType>({form: 'edit-profile'})(ProfileDataForm)\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/img/user.png\";\r\nimport {ProfileType} from \"../../api/profileAPI\";\r\nimport ProfileData from \"./ProfileData\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\n\r\n\r\nexport type ProfileInfoPropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType| null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (formData: ProfileType) => Promise<any>\r\n}\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length != 0) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData: ProfileType) => {\r\n        //todo remove then\r\n        props.saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false)\r\n            })\r\n    }\r\n\r\n   return (\r\n        <div>\r\n            <div className={s.wrapper}>\r\n                <img style={{width: '150px', borderRadius:'50%'}} src={props.profile.photos.large || userPhoto} alt=\"\"/>\r\n                <div style={{display:'flex',gap:'0 5px', margin:'5px 0'}}>\r\n                    <label htmlFor='avatar'>Change Avatar : </label>\r\n                    {props.isOwner && <input id={'avatar'} type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n                </div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                {editMode\r\n                    ? <ProfileDataForm\r\n                        initialValues={props.profile}\r\n                        profile={props.profile}\r\n                        onSubmit={onSubmit}\r\n\r\n                    />\r\n                    : <ProfileData profile={props.profile}\r\n                                   isOwner={props.isOwner}\r\n                                   edit={() => setEditMode(true)}/>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MyPosts_wrapper__3kfjI\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__W2RM8\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {StateType} from \"redux/redux-store\";\r\n\r\ntype MessagePropsType = {\r\n    message: string,\r\n    likeCount: number,\r\n}\r\n\r\nfunction Post(props: MessagePropsType) {\r\n    const photo = useSelector((state: StateType) => state.profilePage.profile?.photos.small)\r\n    const login = useSelector((state: StateType) => state.auth.login)\r\n    return (\r\n        <div className={s.item}>\r\n            <figure style={{margin:'0'}}>\r\n                <img src={photo?photo:undefined} alt=\"avatar\"/>\r\n                <figcaption>{login}</figcaption>\r\n            </figure>\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"utils/validators/validators\";\r\nimport {Button} from \"antd\";\r\n\r\nconst maxLength10 = maxLengthCreator(150)\r\n\r\nexport type FormDataType = {\r\n    newPost: string\r\n}\r\ntype PropsType = {}\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<FormDataType, PropsType> & PropsType> = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <div style={{margin: '5px 0'}}>\r\n                <Field component={Textarea}\r\n                       name={'newPost'}\r\n                       placeholder={'Add new post'}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <Button style={{margin: '5px 0'}}\r\n                        type={\"primary\"}\r\n                        htmlType={'submit'}>Add Post</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm<FormDataType, PropsType>({form: 'AddPost'})(AddPostForm)","import React, {memo} from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"../Post/Post\";\r\nimport {addPostActionCreator,} from \"redux/profile-reducer\";\r\nimport AddPostForm, {FormDataType} from \"../AddPostForm/AddPostForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {StateType} from \"redux/redux-store\";\r\n\r\n\r\nconst MyPosts = memo(() => {\r\n    const posts = useSelector((state: StateType) => state.profilePage.posts)\r\n    const dispatch = useDispatch()\r\n\r\n    let postsElements = posts.map((post: { id: number; message: string; likesCount: number; }) => <Post\r\n        key={post.id} message={post.message} likeCount={post.likesCount}/>)\r\n\r\n    let onAddPost = (values: FormDataType) => {\r\n        dispatch(addPostActionCreator(values.newPost))\r\n    };\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h3>My Post</h3>\r\n            <div className=\"\">\r\n                <AddPostForm onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfileType} from \"../api/profileAPI\";\r\nimport MyPosts from \"components/Profile/MyPosts/Posts/MyPosts\";\r\n\r\n\r\nexport type ProfilePropsType = {\r\n    isOwner:boolean\r\n    profile: ProfileType |null\r\n    status:string\r\n    updateStatus:(status:string)=>void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (formData: ProfileType) => Promise<any>\r\n}\r\n\r\nfunction Profile(props: ProfilePropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo saveProfile={props.saveProfile}  savePhoto={props.savePhoto} isOwner ={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPosts/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatus,\r\n    getUserProfile,\r\n    savePhoto,\r\n    saveProfile,\r\n    updateStatus\r\n} from \"redux/profile-reducer\";\r\nimport {StateType} from \"redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"hoc/WithAuthRedirect\";\r\nimport {ProfileType} from \"../api/profileAPI\";\r\n\r\n\r\ntype ParamsType = {\r\n    userId: string\r\n}\r\ntype MatchType = {\r\n    params: ParamsType\r\n}\r\ntype ProfileContainerType = {\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (formData: ProfileType) => Promise<any>\r\n    getStatus: (userId: number ) => void\r\n    getUserProfile: (userId: number) => void\r\n    profile: ProfileType | null\r\n    setUserProfile: (profile: ProfileType) => { type: string, profile: ProfileType }\r\n    match: MatchType\r\n    isAuth: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    authorizedUserId: number\r\n\r\n}\r\n\r\nexport function withRouter(Children: any) {\r\n    return (props: any) => {\r\n        const match = {params: useParams()};\r\n        return <Children {...props} match={match}/>\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerType> {\r\n    refreshProfile() {\r\n        let userId = +this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                // this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: ProfileContainerType, prevState: ProfileContainerType) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                    saveProfile={this.props.saveProfile}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: StateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default compose<React.FC>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)\r\n","import React, {Component, ComponentType} from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {StateType} from \"redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStateToProps = {\r\n    isAuth: boolean\r\n}\r\ntype DispatchPropsType = {\r\n}\r\nlet mapStateToPropsForRedirect = (state: StateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent: React.FC<MapStateToProps & DispatchPropsType> = (props)=> {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Navigate to={'/login'}/>\r\n        return <Component{...restProps as T}/>\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n};\r\n\r\n"],"names":["_ref","status","updateStatus","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","_useState4","tempStatus","setTempStatus","useEffect","activateEditMode","_jsx","children","Input","onChange","e","currentTarget","value","onBlur","autoFocus","_jsxs","style","display","gap","fontWeight","fontSize","onDoubleClick","EditOutlined","onClick","Contact","_ref2","contactTitle","contactValue","className","s","NavLink","target","to","profile","isOwner","edit","textAlign","Button","type","size","fullName","userId","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","reduxForm","form","handleSubmit","error","onSubmit","htmlType","Field","placeholder","name","component","MyInput","validate","Textarea","props","Preloader","width","borderRadius","src","photos","large","userPhoto","alt","margin","htmlFor","id","files","length","savePhoto","ProfileStatusWithHooks","ProfileDataForm","initialValues","formData","saveProfile","then","ProfileData","photo","useSelector","state","_state$profilePage$pr","profilePage","small","login","auth","undefined","message","maxLength10","maxLengthCreator","required","memo","posts","dispatch","useDispatch","postsElements","post","Post","likeCount","likesCount","AddPostForm","values","addPostActionCreator","newPost","ProfileInfo","MyPosts","withRouter","Children","match","params","useParams","_objectSpread","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","this","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Profile","React","compose","connect","isAuth","WithAuthRedirect","mapStateToPropsForRedirect","Component","restProps","_objectWithoutProperties","_excluded","Navigate"],"sourceRoot":""}